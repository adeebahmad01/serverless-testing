{"version":3,"sources":["pages/Login/index.tsx"],"names":["Login","history","useHistory","useState","email","setEmail","password","setPassword","success","setSuccess","btn","useRef","document","createElement","heading","className","id","autoComplete","onSubmit","e","current","classList","add","disabled","preventDefault","firebase","auth","signInWithEmailAndPassword","then","push","catch","error","style","setProperty","setTimeout","remove","action","method","ref","htmlFor","value","onChange","target","type","placeholder","version","xmlns","xmlnsXlink","x","y","viewBox","xmlSpace","fill","stroke","strokeWidth","strokeLinejoin","strokeMiterlimit","d","points","fontSize"],"mappings":"gLAgJeA,UA3ID,WACZ,IAAMC,EAAUC,cAEhB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAGMC,EAAMC,iBAA0BC,SAASC,cAAc,WACvDC,EAAUH,iBAA2BC,SAASC,cAAc,OAyBlE,OACE,qBAAKE,UAAU,kBAAf,SACE,uBACEC,GAAG,cACHC,aAAa,MACbC,SAxBe,SAACC,GACpBT,EAAIU,QAAQC,UAAUC,IAAI,kBAC1BZ,EAAIU,QAAQG,UAAW,EACvBJ,EAAEK,iBACFV,EAAQM,QAAQC,UAAUC,IAAI,WAC9BG,IACGC,OACAC,2BAA2BvB,EAAOE,GAClCsB,MAAK,WACJ3B,EAAQ4B,KAAK,0BAEdC,OAAM,SAACC,GACNtB,GAAW,GACXK,EAAQM,QAAQY,MAAMC,YAAY,SAAU,OAC5CvB,EAAIU,QAAQG,UAAW,EACvBW,YAAW,kBAAMxB,EAAIU,QAAQC,UAAUc,OAAO,qBAAoB,KAlBtEzB,EAAIU,QAAQC,UAAUc,OAAO,kBAC7BzB,EAAIU,QAAQC,UAAUC,IAAI,uBA2BtBc,OAAO,IACPrB,UAAU,cACVsB,OAAO,OANT,UAQE,oBAAIC,IAAKxB,EAASC,UAAU,gBAAgBC,GAAG,YAA/C,yBAGA,sBAAKD,UAAU,QAAf,UACE,8BACE,uBAAOwB,QAAQ,QAAf,mBACA,uBACEC,MAAOpC,EACPa,aAAa,MACbF,UAAU,kBACV0B,SAAU,SAACtB,GAAD,OAAOd,EAASc,EAAEuB,OAAOF,QACnCG,KAAK,QACL3B,GAAG,QACH4B,YAAY,aAGhB,8BACE,uBAAOL,QAAQ,WAAf,sBACA,uBACEC,MAAOlC,EACPW,aAAa,MACbF,UAAU,kBACV0B,SAAU,SAACtB,GAAD,OAAOZ,EAAYY,EAAEuB,OAAOF,QACtCG,KAAK,WACL3B,GAAG,WACH4B,YAAY,mBAIlB,yBACEN,IAAK5B,EACLK,UAAU,kCACVC,GAAG,eAHL,UAKE,4CAEA,qBACE6B,QAAQ,MACRC,MAAM,6BACNC,WAAW,+BACXC,EAAE,MACFC,EAAE,MACFC,QAAQ,YACRC,SAAS,WACTpC,UAAU,YACVC,GAAG,UATL,SAWE,sBACED,UAAU,YACViB,MAAO,CACLoB,KAAM,OACNC,OAAQ,OACRC,YAAa,EACbC,eAAgB,QAChBC,iBAAkB,IAEpBC,EAAE,wIAILjD,EACC,qBACEqC,QAAQ,MACRC,MAAM,6BACNC,WAAW,+BACXC,EAAE,MACFC,EAAE,MACFC,QAAQ,YACRC,SAAS,WACTpC,UAAU,YARZ,SAUE,0BACEA,UAAU,YACViB,MAAO,CACLoB,KAAM,OACNC,OAAQ,OACRC,YAAa,EACbC,eAAgB,QAChBC,iBAAkB,IAEpBE,OAAO,sCAKX,sBAAM1B,MAAO,CAAE2B,SAAS,UAAa5C,UAAU,YAA/C,4B","file":"static/js/6.e35c450e.chunk.js","sourcesContent":["import React, { useState, useRef, FormEvent } from \"react\";\r\nimport \"./login.css\";\r\nimport firebase from \"../../config/Firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  // ! STATES\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [success, setSuccess] = useState(true);\r\n\r\n  // ! REFS\r\n  const btn = useRef<HTMLButtonElement>(document.createElement(\"button\"));\r\n  const heading = useRef<HTMLHeadingElement>(document.createElement(\"h1\"));\r\n\r\n  const setFinished = () => {\r\n    btn.current.classList.remove(\"c-btn__loading\");\r\n    btn.current.classList.add(\"c-btn__finished\");\r\n  };\r\n  const handleSubmit = (e: FormEvent) => {\r\n    btn.current.classList.add(\"c-btn__loading\");\r\n    btn.current.disabled = true;\r\n    e.preventDefault();\r\n    heading.current.classList.add(\"poweron\");\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        history.push(\"/panel/add/projects\");\r\n      })\r\n      .catch((error) => {\r\n        setSuccess(false);\r\n        heading.current.style.setProperty(\"--neon\", \"red\");\r\n        btn.current.disabled = false;\r\n        setTimeout(() => btn.current.classList.remove(\"c-btn__finished\"), 3000);\r\n        setFinished();\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"login_container\">\r\n      <form\r\n        id=\"accesspanel\"\r\n        autoComplete=\"off\"\r\n        onSubmit={handleSubmit}\r\n        action=\"/\"\r\n        className=\"adding_form\"\r\n        method=\"post\"\r\n      >\r\n        <h1 ref={heading} className=\"light_heading\" id=\"litheader\">\r\n          ADEEB AHMAD\r\n        </h1>\r\n        <div className=\"inset\">\r\n          <p>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              value={email}\r\n              autoComplete=\"off\"\r\n              className=\"browser-default\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              type=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"Email\"\r\n            />\r\n          </p>\r\n          <p>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              value={password}\r\n              autoComplete=\"off\"\r\n              className=\"browser-default\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              type=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </p>\r\n        </div>\r\n        <button\r\n          ref={btn}\r\n          className=\"c-btn__continue browser-default\"\r\n          id=\"continue-btn\"\r\n        >\r\n          <span>Continue</span>\r\n\r\n          <svg\r\n            version=\"1.1\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            x=\"0px\"\r\n            y=\"0px\"\r\n            viewBox=\"0 0 37 37\"\r\n            xmlSpace=\"preserve\"\r\n            className=\"u-loading\"\r\n            id=\"loading\"\r\n          >\r\n            <path\r\n              className=\"circ path\"\r\n              style={{\r\n                fill: \"none\",\r\n                stroke: \"#fff\",\r\n                strokeWidth: 3,\r\n                strokeLinejoin: \"round\",\r\n                strokeMiterlimit: 10,\r\n              }}\r\n              d=\"\r\n\tM30.5,6.5L30.5,6.5c6.6,6.6,6.6,17.4,0,24l0,0c-6.6,6.6-17.4,6.6-24,0l0,0c-6.6-6.6-6.6-17.4,0-24l0,0C13.1-0.2,23.9-0.2,30.5,6.5z\"\r\n            />\r\n          </svg>\r\n          {success ? (\r\n            <svg\r\n              version=\"1.1\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n              x=\"0px\"\r\n              y=\"0px\"\r\n              viewBox=\"0 0 37 37\"\r\n              xmlSpace=\"preserve\"\r\n              className=\"u-success\"\r\n            >\r\n              <polyline\r\n                className=\"tick path\"\r\n                style={{\r\n                  fill: \"none\",\r\n                  stroke: \"#fff\",\r\n                  strokeWidth: 3,\r\n                  strokeLinejoin: \"round\",\r\n                  strokeMiterlimit: 10,\r\n                }}\r\n                points=\"\r\n\t11.6,20 15.9,24.2 26.4,13.8 \"\r\n              />\r\n            </svg>\r\n          ) : (\r\n            <span style={{ fontSize: `2.5rem` }} className=\"u-success\">\r\n              &times;\r\n            </span>\r\n          )}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}