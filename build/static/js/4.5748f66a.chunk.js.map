{"version":3,"sources":["utils/Typer.tsx","components/About/index.tsx","components/Projects/Project.jsx","components/Projects/index.jsx","components/Slides/index.jsx","components/Skills/Skill.jsx","components/Skills/index.jsx","components/Contact/ContactLink.tsx","components/Contact/index.tsx","components/Testimonials/Testimonial.jsx","components/Testimonials/index.jsx","pages/Home/index.tsx"],"names":["Typer","strings","typerRef","useCallback","typer","innerHTML","span","document","createElement","style","whiteSpace","append","options","typeSpeed","backSpeed","loop","cursorChar","Typed","ref","Reveal","require","About","useState","professions","skills","className","id","effect","Icon","split","map","el","i","Project","title","images","list","nameToUrl","color","useCursor","history","handleMouseEnter","handleMouseLeave","useHistory","styleBtn","onClick","push","backgroundImage","styleList","showList","ChevronRight","Projects","context","useData","count","setCount","useEffect","measureChange","window","onresize","innerWidth","showProjects","projects","project","left","padding","internal","start","Math","floor","length","slice","showRows","Slides","slides","slidesPerView","autoplay","delay","disableOnInteraction","img","Skill","percentage","name","styles","Skills","key","ContactLink","link","svg","href","target","rel","dangerouslySetInnerHTML","__html","Contact","links","contact","Testimonial","review","src","stars","class","alt","Testimonials","testimonials","slider","setSlider","index","setIndex","querySelector","swiper","prev","next","position","navigation","r","console","log","width","onSlideChange","e","realIndex","slidePrev","slideNext","Home","admin","useAuth","typed","addEventListener","addListener","removeEventListener","join","isAuth","Header","Sidebar","Footer"],"mappings":"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","file":"static/js/4.5748f66a.chunk.js","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport Typed from \"typed.js\";\r\n\r\nconst Typer = ({ strings = [] }: { strings: string[] }) => {\r\n  const typerRef = useCallback(\r\n    (typer) => {\r\n      if (!typer) return;\r\n      typer.innerHTML = \"\";\r\n      const span = document.createElement(\"span\");\r\n      span.style.whiteSpace = \"pre\";\r\n      typer.append(span);\r\n      const options = {\r\n        strings,\r\n        typeSpeed: 70,\r\n        backSpeed: 30,\r\n        loop: true,\r\n        cursorChar: \"\",\r\n      };\r\n      new Typed(span, options);\r\n    },\r\n    [strings]\r\n  );\r\n  return <span ref={typerRef} />;\r\n};\r\n\r\nexport default Typer;\r\n","import React, { useState } from \"react\";\r\nimport Icon from \"../../utils/Icon\";\r\nimport Typer from \"../../utils/Typer\";\r\nimport \"./about.css\";\r\nconst Reveal = require(\"react-reveal/Reveal\");\r\nconst About = () => {\r\n  const [professions] = useState([\r\n    \"Web Developer.\",\r\n    \"ReactJS Developer.\",\r\n    \"Firebase App Developer.\",\r\n  ]);\r\n  const [skills] = useState([\r\n    \"HTML.\",\r\n    \"CSS.\",\r\n    \"BootStrap.\",\r\n    \"JS.\",\r\n    \"ReactJS.\",\r\n    \"JQuery.\",\r\n    \"Material-UI\",\r\n    \"Firebase\",\r\n  ]);\r\n  const styles: any = { \"--color-1\": \"#ff0b56\" };\r\n  return (\r\n    <section className=\"row mx-0 about\">\r\n      <div className=\"hide-on-small-only col-lg-3 col-md-4\">\r\n        <div id=\"svg\">\r\n          <Reveal effect=\"icon_svg\">\r\n            <Icon />\r\n          </Reveal>\r\n        </div>\r\n      </div>\r\n      <div className=\"text-white col-lg-8 col-md-8\">\r\n        <div className=\"about_me\">\r\n          <span className=\"hello section-title\" style={styles}>\r\n            Hello,\r\n          </span>\r\n          <br />\r\n          <span>\r\n            {\"My name is Adeeb Ahmad and I'm a\".split(\"\").map((el, i) =>\r\n              el === \" \" ? (\r\n                <span key={i}>&nbsp;</span>\r\n              ) : (\r\n                <span key={i} className=\"buttonD blast\">\r\n                  {el}\r\n                </span>\r\n              )\r\n            )}\r\n          </span>{\" \"}\r\n          <span className=\"color_primary\">\r\n            {\"{\"}\r\n            <Typer strings={professions} />\r\n            {\"}\"}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            I've 2 year experiance in web development.I can create responsive\r\n            websites with{\" \"}\r\n          </span>\r\n          <span className=\"color_sec\">{<Typer strings={skills} />}</span>\r\n        </div>\r\n        <p>\r\n          I have good knowledge of different CSS frameworks like Bootstrap &\r\n          Materialize.\r\n        </p>\r\n        <p>\r\n          I also have knowledge of UI/UX design. I can create user friendly\r\n          websites.\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChevronRight } from \"@material-ui/icons\";\r\nimport { useCursor } from \"../../context/useCursor\";\r\nconst Project = ({ title, images, list, nameToUrl, color }) => {\r\n  const { handleMouseEnter, handleMouseLeave } = useCursor();\r\n  const history = useHistory();\r\n  const styleBtn = {};\r\n  styleBtn[\"--btn-color\"] = color;\r\n  const showList = (list) =>\r\n    list.map((el, i) => {\r\n      const styleList = {};\r\n      styleList[\"--i\"] = i;\r\n      return (\r\n        <li key={i} style={styleList}>\r\n          {\" \"}\r\n          {el}{\" \"}\r\n        </li>\r\n      );\r\n    });\r\n  return (\r\n    <div\r\n      className=\"project\"\r\n      style={styleBtn}\r\n      onClick={() => {\r\n        history.push(`/projects/${nameToUrl(title)}`);\r\n      }}\r\n    >\r\n      <h2 className=\"upper_heading\">\r\n        <i></i>\r\n        {title}\r\n      </h2>\r\n      <div className=\"myCard\">\r\n        <div className=\"pic\" style={{ backgroundImage: `url(${images[0]})` }}>\r\n          <div className=\"my_list\">\r\n            <ul>{showList(list)}</ul>\r\n          </div>\r\n        </div>\r\n        <ul className=\"dots\">\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n        </ul>\r\n        <div className=\"view_more text-white\">\r\n          <ChevronRight color=\"inherit\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"ribbon\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Project from \"./Project\";\r\nimport { useData } from \"../../context/DataContext\";\r\nimport \"./projects.css\";\r\nimport { Slide } from \"react-reveal\";\r\n\r\nconst Projects = () => {\r\n  const context = useData();\r\n  const [count, setCount] = useState(3);\r\n  useEffect(() => {\r\n    measureChange();\r\n    window.onresize = measureChange;\r\n  }, []);\r\n  const measureChange = () => {\r\n    if (window.innerWidth > 1500) {\r\n      setCount(3);\r\n    } else if (window.innerWidth > 1000) {\r\n      setCount(2);\r\n    } else if (window.innerWidth < 1000 && window.innerWidth > 600) {\r\n      setCount(2);\r\n    } else if (window.innerWidth > 600) {\r\n      setCount(1);\r\n    }\r\n  };\r\n  const showProjects = (projects) =>\r\n    projects.map((project, i) => (\r\n      <Slide left key={i}>\r\n        <div\r\n          style={{ padding: `0 1rem` }}\r\n          className={`${\r\n            window.innerWidth > 1500 ? \"col-xl-4\" : \"\"\r\n          } col-lg-6 col-md-6 col-12`}\r\n        >\r\n          <Project {...project} nameToUrl={context.nameToUrl} />\r\n        </div>\r\n      </Slide>\r\n    ));\r\n  const showRows = (projects) => {\r\n    const internal = [];\r\n    let start = 0;\r\n    for (let i = 0; i <= Math.floor(projects.length / count); i++) {\r\n      internal.push(\r\n        <div className=\"row\" key={i}>\r\n          {\" \"}\r\n          {showProjects(projects.slice(start, start + count))}{\" \"}\r\n        </div>\r\n      );\r\n      start = start + count;\r\n    }\r\n    return internal;\r\n  };\r\n  return (\r\n    <section className=\"projects\">\r\n      <div className=\"row center mx-0\">\r\n        <h1 className=\"section-title\">Projects</h1>\r\n      </div>\r\n      <div className=\"container\">{showRows(context.projects)}</div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/swiper-bundle.min.css\";\r\nimport \"./slides.css\";\r\nimport { useData } from \"../../context/DataContext\";\r\n\r\nconst Slides = () => {\r\n  const { slides } = useData();\r\n  const showSlides = () =>\r\n    slides.map((el, i) => (\r\n      <SwiperSlide\r\n        key={i}\r\n        style={{ backgroundImage: `url(${el.img})` }}\r\n      ></SwiperSlide>\r\n    ));\r\n  return (\r\n    <div className=\"sliders\">\r\n      <div className=\"swiper_slider container\">\r\n        <Swiper\r\n          slidesPerView={1}\r\n          autoplay={{ delay: 4000, disableOnInteraction: false }}\r\n          loop={true}\r\n          effect=\"cube\"\r\n        >\r\n          {showSlides()}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slides;\r\n","import React from \"react\";\r\nimport Reveal from \"react-reveal/Reveal\";\r\n\r\nconst Skill = ({ percentage, color, name }) => {\r\n  const styles = {};\r\n  styles[\"--percentage\"] = percentage;\r\n  styles[\"--color\"] = color;\r\n  return (\r\n    <div className=\"skill\">\r\n      <div className=\"name\">{name}</div>\r\n      <Reveal effect=\"percentage_animation\"><div className=\"percentage\" style={styles}></div></Reveal>\r\n      <div className=\"value\">{percentage}%</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Skill;\r\n","import React from \"react\";\r\nimport { useData } from \"../../context/DataContext\";\r\nimport Skill from \"./Skill\";\r\nimport \"./skills.css\";\r\nconst Skills = () => {\r\n  const { skills } = useData();\r\n  const showSkills = () => skills.map((el, i) => <Skill {...el} key={i} />);\r\n  return (\r\n    <section className=\"skills\">\r\n      <div className=\"container\">\r\n        <div className=\"center\">\r\n          <h1 className=\"section-title\">My Skills</h1>\r\n        </div>\r\n        <div className=\"skills\">{showSkills()}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import { FC } from \"react\";\r\nimport { ContactInterface } from \"../../types/types\";\r\n\r\nconst ContactLink: FC<ContactInterface & { i: number }> = ({\r\n  name,\r\n  link,\r\n  svg,\r\n  color,\r\n  i,\r\n}) => {\r\n  const setColor = () => (color.length > 21 ? color.split(\",\")[1] : color);\r\n  const styles: any = { \"--color\": color, \"--color-1\": setColor() };\r\n  return (\r\n    <li className={`${name} contact_link_${i}`} style={styles}>\r\n      <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <i dangerouslySetInnerHTML={{ __html: svg }}></i>\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactLink;\r\n","import React from \"react\";\r\nimport { useData } from \"../../context/DataContext\";\r\nimport { ContactInterface } from \"../../types/types\";\r\nimport \"./contact.css\";\r\nimport ContactLink from \"./ContactLink\";\r\nconst Reveal = require(\"react-reveal/Reveal\");\r\nconst Contact = () => {\r\n  const { contact: links }: { contact?: ContactInterface[] } = useData();\r\n  const showLinks = () => {\r\n    return links && links.map((el, i) => <ContactLink i={i} {...el} key={i} />);\r\n  };\r\n  return (\r\n    <section className=\"contact\">\r\n      <h1 className=\"center white-text section-title\">Contact Me</h1>\r\n      <div className=\"social-main\">\r\n        <Reveal effect=\"rotate_icons\">\r\n          <ul className=\"social-icons\">{showLinks()}</ul>\r\n        </Reveal>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport Star from '@material-ui/icons/Star';\r\n\r\nconst Testimonial = ({name,review,src,stars}) => {\r\n  return (\r\n    <div class=\"feedback-slider-item\">\r\n      <img\r\n        src={src}\r\n        class=\"center-block img-circle\"\r\n        alt={name}\r\n      />\r\n      <h3 class=\"customer-name center\">{name}</h3>\r\n      <p>\r\n        {review}\r\n      </p>\r\n      <span class=\"light-bg customer-rating\">\r\n        {stars}\r\n        <Star />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Testimonial;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Testimonial from './Testimonial';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport \"./testimonials.css\"\r\nimport Star from '@material-ui/icons/Star';\r\n\r\nconst Testimonials = ({ testimonials }) => {\r\n  const [slider,setSlider] = useState({});\r\n  const [index,setIndex] = useState(0)\r\n  useEffect(()=>{\r\n    setSlider(document.querySelector('.testimonials .swiper-container').swiper);\r\n  },[]);\r\n  const showTestimonials = ()=>testimonials.map(el=> <SwiperSlide><Testimonial {...el} /></SwiperSlide>);\r\n  const prev = testimonials[index-1 >= 0 ? index-1 : testimonials.length-1];\r\n  const next = testimonials[index+1 <= testimonials.length-1 ? index+1 : 0];\r\n  \r\n  return (\r\n    <div className=\"testimonials\">\r\n      <div className=\"container\">\r\n        <div className=\"center\">\r\n          <h1 className=\"section-title testimonial_heading\">What Client Says</h1>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-8 col-12\" style={{position: `relative`}}>\r\n            <Swiper navigation={true} ref={r=> console.log(r)} style={{width: `100%`}} onSlideChange={(e)=> setIndex(e.realIndex)} effect=\"flip\" loop={true}>\r\n              {showTestimonials()}\r\n            </Swiper>\r\n            <div className=\"feedback-slider-thumb hide-on-med-and-down\">\r\n\t\t\t\t\t\t<div className=\"thumb-prev\" onClick={()=>slider.slidePrev()}>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<img src={prev.src} alt={prev.name}/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"light-bg customer-rating \"> {prev.stars} <Star /> </span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"thumb-next\" onClick={()=>slider.slideNext()}>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<img src={next.src} alt={next.name}/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"light-bg customer-rating \"> {next.stars} <Star /> </span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Testimonials;","import React, { KeyboardEvent, useEffect } from \"react\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Sidebar from \"../../components/Sidebar\";\r\n\r\nimport About from \"../../components/About\";\r\nimport Projects from \"../../components/Projects\";\r\nimport Slides from \"../../components/Slides\";\r\nimport Skills from \"../../components/Skills\";\r\nimport Contact from \"../../components/Contact\";\r\n\r\nimport Footer from \"../../components/Footer\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useData } from \"../../context/DataContext\";\r\nimport Testimonials from \"../../components/Testimonials\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n  const admin = useAuth();\r\n  const { testimonials, slides, skills, projects } = useData();\r\n  const typed: string[] = [];\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", addListener);\r\n    return () => window.removeEventListener(\"keydown\", addListener);\r\n  });\r\n  const addListener = (e: Event & KeyboardEvent) => {\r\n    const code = \"adeebahmad\";\r\n    typed.push(e.key);\r\n    if (typed.join(\"\") === code) {\r\n      if (!admin.isAuth) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        history.push(\"/panel/add/projects\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Sidebar />\r\n      <div className=\"outer_container\">\r\n        <section data-name=\"about_me\">\r\n          <About />\r\n        </section>\r\n        {skills.length > 0 ? (\r\n          <section data-name=\"skills\">\r\n            <Skills />\r\n          </section>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {slides.length > 0 ? <Slides /> : \"\"}\r\n        {testimonials.length > 0 ? (\r\n          <section data-name=\"testimonials\">\r\n            <Testimonials testimonials={testimonials} />\r\n          </section>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {projects.length > 0 ? (\r\n          <section data-name=\"projects\">\r\n            <Projects />\r\n          </section>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <section data-name=\"contact_me\">\r\n          <Contact />\r\n        </section>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}