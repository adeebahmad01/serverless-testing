{"version":3,"sources":["pages/Panel/Project/index.jsx","utils/Input.tsx"],"names":["Panel","history","useState","title","setTitle","link","setLink","color","setColor","list","setList","imgs","setImages","form","useRef","buttons","className","admin","onSubmit","e","preventDefault","joditEditor","document","querySelector","length","textContent","current","classList","add","details","innerHTML","Promise","all","map","img","i","storage","ref","put","then","getDownloadURL","images","db","collection","remove","catch","error","id","method","loader","onChange","target","value","type","placeholder","htmlFor","config","theme","removeButtons","buttonsSM","buttonsXS","files","Array","from","multiple","style","display","readOnly","el","name","split","join","to","onClick","firebase","auth","signOut","push","Input","props","required","autoComplete"],"mappings":"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","file":"static/js/8.c8297bb1.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport firebase, { db, storage } from \"../../../config/Firebase\";\r\nimport \"./panel.css\";\r\nimport Icon from \"../../../utils/Icon\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Editor from \"jodit-react\";\r\nimport Header from \"../../../components/Header\";\r\nimport Sidebar from \"../../../components/Sidebar\";\r\nimport Input from \"../../../utils/Input\";\r\nimport Footer from \"../../../components/Footer\";\r\nconst Panel = ({ history }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n  const [color, setColor] = useState(\"\");\r\n  const [list, setList] = useState([]);\r\n  const [imgs, setImages] = useState([]);\r\n  const form = useRef(null);\r\n  const handleClick = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => history.push(\"/\"))\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const joditEditor = document.querySelector(\".project_form .jodit-wysiwyg\");\r\n    if (imgs.length > 0) {\r\n      if (joditEditor.textContent) {\r\n        form.current.classList.add(\"show_on_success\");\r\n        const details = joditEditor.innerHTML;\r\n        Promise.all(\r\n          imgs.map((img, i) =>\r\n            storage.ref(`/projects/${title}/${title}_${i}`).put(img)\r\n          )\r\n        )\r\n          .then(() => {\r\n            Promise.all(\r\n              imgs.map((img, i) =>\r\n                storage.ref(`/projects/${title}/${title}_${i}`).getDownloadURL()\r\n              )\r\n            )\r\n              .then((images) => {\r\n                db.collection(\"projects\")\r\n                  .add({ title, link, details, images, color, list })\r\n                  .then(() => {\r\n                    form.current.classList.remove(\"show_on_success\");\r\n                    setTitle(\"\");\r\n                    setLink(\"\");\r\n                    document.querySelector(\r\n                      \".project_form .jodit-wysiwyg\"\r\n                    ).innerHTML = \"\";\r\n                    setList([]);\r\n                    setColor(\"\");\r\n                    setImages([]);\r\n                  })\r\n                  .catch((error) => {});\r\n              })\r\n              .catch((error) => {});\r\n          })\r\n          .catch((error) => {});\r\n      } else {\r\n      }\r\n    } else {\r\n    }\r\n  };\r\n  const removeButtons = [\r\n    \"|\",\r\n    \"outdent\",\r\n    \"indent\",\r\n    \"|\",\r\n    \"font\",\r\n    \"fontsize\",\r\n    \"brush\",\r\n    \"image\",\r\n    \"file\",\r\n    \"video\",\r\n    \"link\",\r\n    \"table\",\r\n    \"|\",\r\n    \"align\",\r\n    \"selectall\",\r\n    \"cut\",\r\n    \"copy\",\r\n    \"paste\",\r\n    \"copyformat\",\r\n    \"symbol\",\r\n    \"print\",\r\n    \"preview\",\r\n    \"find\",\r\n    \"about\",\r\n  ];\r\n  const buttons = [\"source\", \"bold\", \"italic\", \"paragraph\", \"|\", \"ul\", \"ol\"];\r\n  return (\r\n    <div className=\"add_panel\">\r\n      <Header admin={true} />\r\n      <Sidebar admin={true} />\r\n      <div className=\"outer_container\">\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          id=\"accesspanel\"\r\n          className=\"container adding_form project_form\"\r\n          method=\"post\"\r\n        >\r\n          <div className=\"loader_success\" ref={form}>\r\n            <Icon loader={true} />\r\n          </div>\r\n          <h1 id=\"litheader\" className=\"light_heading\">\r\n            ADD NEW PROJECT\r\n          </h1>\r\n          <div className=\"row\">\r\n            <Input\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              value={title}\r\n              type=\"text\"\r\n              id=\"title\"\r\n              placeholder=\"Title\"\r\n            />\r\n            <Input\r\n              onChange={(e) => setLink(e.target.value)}\r\n              value={link}\r\n              type=\"url\"\r\n              id=\"link\"\r\n              placeholder=\"Link of Project\"\r\n            />\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <label htmlFor=\"details\">details:</label>\r\n              <div className=\"btn_animate jodit_editor input_animate\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <div>\r\n                  <Editor\r\n                    config={{\r\n                      theme: \"black\",\r\n                      removeButtons,\r\n                      buttonsSM: buttons,\r\n                      buttonsXS: buttons,\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <label className=\"col-12\">Upload Images</label>\r\n            <div className=\"col-lg-6  col-12 \">\r\n              <label htmlFor=\"files\">\r\n                <div className=\"btn_animate\">\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                  Upload Pictures &nbsp;\r\n                  <span className=\"shift\">â€º</span>\r\n                  <div className=\"mask\"></div>\r\n                </div>\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  if (e.target.files) {\r\n                    setImages(Array.from(e.target.files));\r\n                  }\r\n                }}\r\n                multiple\r\n                id=\"files\"\r\n                style={{ display: `none` }}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-6  col-12 \">\r\n              <div className=\"btn_animate input_animate\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <input\r\n                  readOnly={true}\r\n                  type=\"text\"\r\n                  value={imgs.map((el, i) =>\r\n                    i < imgs.length - 1 ? el.name + \" \" : el.name + \".\"\r\n                  )}\r\n                  className=\"browser-default\"\r\n                  placeholder=\"No File Chosen\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <Input\r\n              onChange={(e) => setColor(e.target.value)}\r\n              value={color}\r\n              type=\"text\"\r\n              id=\"color\"\r\n              placeholder=\"Color\"\r\n            />\r\n            <Input\r\n              onChange={(e) => setList(e.target.value.split(\",\"))}\r\n              value={list.join(\",\")}\r\n              type=\"text\"\r\n              id=\"Languages\"\r\n              placeholder=\"Languages\"\r\n            />\r\n          </div>\r\n          <div className=\"center btn_wrapper\">\r\n            <button className=\"btn_animate browser-default\">\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              Add new project\r\n              <span className=\"shift\">â€º</span>\r\n            </button>\r\n            <Link to=\"/\" className=\"btn_animate browser-default\">\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              Home\r\n            </Link>\r\n            <div\r\n              className=\"btn_animate\"\r\n              style={{ display: `inline-block` }}\r\n              onClick={handleClick}\r\n            >\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              Logout &nbsp;\r\n              <span className=\"shift\">â€º</span>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import React, { FC, InputHTMLAttributes } from \"react\";\r\ninterface Props {\r\n  id: string;\r\n}\r\nconst Input: FC<Props & InputHTMLAttributes<HTMLInputElement>> = (props) => {\r\n  return (\r\n    <div className=\"col-lg-6 col-12\">\r\n      <label htmlFor={props.id}>{props.id}:</label>\r\n      <div className=\"btn_animate input_animate\">\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <input\r\n          required\r\n          {...props}\r\n          autoComplete=\"off\"\r\n          className=\"browser-default\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"sourceRoot":""}